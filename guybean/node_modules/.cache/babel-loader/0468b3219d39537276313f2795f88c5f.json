{"ast":null,"code":"var _jsxFileName = \"/Users/jirehlau/Documents/GA/12 Weeks/Projects/Final-Project/guybean/src/components/SignUpForm/SignUpForm.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUpForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirm: '',\n      error: ''\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value,\n        error: ''\n      });\n    };\n\n    this.handleSubmit = async evt => {\n      evt.preventDefault();\n\n      try {\n        // 1. POST our new user info to the server\n        const fetchResponse = await fetch('/api/userRoutes/signup', {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password\n          })\n        });\n        console.log(\"sending login details to server\"); // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n\n        if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request');\n        console.log(\"checking for server errors\");\n        let token = await fetchResponse.json(); // 3. decode fetch response to get jwt from srv\n\n        localStorage.setItem('token', token); // 4. Stick token into localStorage\n\n        console.log(\"putting token into local storage\");\n        const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n\n        console.log(\"decoding token\");\n        this.props.setUserInState(userDoc);\n        console.log(\"putting user into state\");\n      } catch (err) {\n        console.log(\"SignupForm error\", err);\n        this.setState({\n          error: 'Sign Up Failed - Try Again'\n        });\n      }\n    };\n  }\n\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirm\",\n            value: this.state.confirm,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: disable,\n            children: \"SIGN UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"\\xA0\", this.state.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["/Users/jirehlau/Documents/GA/12 Weeks/Projects/Final-Project/guybean/src/components/SignUpForm/SignUpForm.jsx"],"names":["Component","SignUpForm","state","name","email","password","confirm","error","handleChange","evt","setState","target","value","handleSubmit","preventDefault","fetchResponse","fetch","method","headers","body","JSON","stringify","console","log","ok","Error","token","json","localStorage","setItem","userDoc","parse","atob","split","user","props","setUserInState","err","render","disable"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nclass SignUpForm extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    confirm: '',\n    error: ''\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value,\n      error: ''\n    });\n  };\n\n  handleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      // 1. POST our new user info to the server\n      const fetchResponse = await fetch('/api/userRoutes/signup', {\n        method: 'POST',\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({name: this.state.name, email: this.state.email, password: this.state.password,})\n      })\n      console.log(\"sending login details to server\")\n      // 2. Check \"fetchResponse.ok\". False means status code was 4xx from the server/controller action\n      if (!fetchResponse.ok) throw new Error('Fetch failed - Bad request')\n      console.log(\"checking for server errors\")\n      let token = await fetchResponse.json() // 3. decode fetch response to get jwt from srv\n      localStorage.setItem('token', token);  // 4. Stick token into localStorage\n      console.log(\"putting token into local storage\")\n      const userDoc = JSON.parse(atob(token.split('.')[1])).user; // 5. Decode the token + put user document into state\n      console.log(\"decoding token\")\n      this.props.setUserInState(userDoc)\n      console.log(\"putting user into state\")\n    } catch (err) {\n      console.log(\"SignupForm error\", err)\n      this.setState({ error: 'Sign Up Failed - Try Again' });\n    }\n  }\n\n  render() {\n    const disable = this.state.password !== this.state.confirm;\n    return (\n      <div>\n        <div className=\"form-container\">\n          <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} required />\n            <label>Email</label>\n            <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n            <label>Confirm</label>\n            <input type=\"password\" name=\"confirm\" value={this.state.confirm} onChange={this.handleChange} required />\n            <button type=\"submit\" disabled={disable}>SIGN UP</button>\n          </form>\n        </div>\n        <p className=\"error-message\">&nbsp;{this.state.error}</p>\n      </div>\n    );\n  }\n}\n\n\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}